/*
Pyrra

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// QueryRange struct for QueryRange
type QueryRange struct {
	Query  string      `json:"query"`
	Labels []string    `json:"labels"`
	Values [][]float64 `json:"values"`
}

// NewQueryRange instantiates a new QueryRange object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQueryRange(query string, labels []string, values [][]float64) *QueryRange {
	this := QueryRange{}
	this.Query = query
	this.Labels = labels
	this.Values = values
	return &this
}

// NewQueryRangeWithDefaults instantiates a new QueryRange object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQueryRangeWithDefaults() *QueryRange {
	this := QueryRange{}
	return &this
}

// GetQuery returns the Query field value
func (o *QueryRange) GetQuery() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Query
}

// GetQueryOk returns a tuple with the Query field value
// and a boolean to check if the value has been set.
func (o *QueryRange) GetQueryOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Query, true
}

// SetQuery sets field value
func (o *QueryRange) SetQuery(v string) {
	o.Query = v
}

// GetLabels returns the Labels field value
func (o *QueryRange) GetLabels() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Labels
}

// GetLabelsOk returns a tuple with the Labels field value
// and a boolean to check if the value has been set.
func (o *QueryRange) GetLabelsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Labels, true
}

// SetLabels sets field value
func (o *QueryRange) SetLabels(v []string) {
	o.Labels = v
}

// GetValues returns the Values field value
func (o *QueryRange) GetValues() [][]float64 {
	if o == nil {
		var ret [][]float64
		return ret
	}

	return o.Values
}

// GetValuesOk returns a tuple with the Values field value
// and a boolean to check if the value has been set.
func (o *QueryRange) GetValuesOk() ([][]float64, bool) {
	if o == nil {
		return nil, false
	}
	return o.Values, true
}

// SetValues sets field value
func (o *QueryRange) SetValues(v [][]float64) {
	o.Values = v
}

func (o QueryRange) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["query"] = o.Query
	}
	if true {
		toSerialize["labels"] = o.Labels
	}
	if true {
		toSerialize["values"] = o.Values
	}
	return json.Marshal(toSerialize)
}

type NullableQueryRange struct {
	value *QueryRange
	isSet bool
}

func (v NullableQueryRange) Get() *QueryRange {
	return v.value
}

func (v *NullableQueryRange) Set(val *QueryRange) {
	v.value = val
	v.isSet = true
}

func (v NullableQueryRange) IsSet() bool {
	return v.isSet
}

func (v *NullableQueryRange) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQueryRange(val *QueryRange) *NullableQueryRange {
	return &NullableQueryRange{value: val, isSet: true}
}

func (v NullableQueryRange) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQueryRange) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
