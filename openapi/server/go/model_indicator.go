/*
 * Pyrra
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 0.3.4
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

type Indicator struct {
	Ratio IndicatorRatio `json:"ratio,omitempty"`

	Latency IndicatorLatency `json:"latency,omitempty"`
}

// AssertIndicatorRequired checks if the required fields are not zero-ed
func AssertIndicatorRequired(obj Indicator) error {
	if err := AssertIndicatorRatioRequired(obj.Ratio); err != nil {
		return err
	}
	if err := AssertIndicatorLatencyRequired(obj.Latency); err != nil {
		return err
	}
	return nil
}

// AssertRecurseIndicatorRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of Indicator (e.g. [][]Indicator), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseIndicatorRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aIndicator, ok := obj.(Indicator)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertIndicatorRequired(aIndicator)
	})
}
