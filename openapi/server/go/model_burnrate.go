/*
 * Pyrra
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 0.3.4
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

type Burnrate struct {
	Window int64 `json:"window"`

	Current float64 `json:"current"`

	Query string `json:"query"`
}

// AssertBurnrateRequired checks if the required fields are not zero-ed
func AssertBurnrateRequired(obj Burnrate) error {
	elements := map[string]interface{}{
		"window":  obj.Window,
		"current": obj.Current,
		"query":   obj.Query,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	return nil
}

// AssertRecurseBurnrateRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of Burnrate (e.g. [][]Burnrate), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseBurnrateRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aBurnrate, ok := obj.(Burnrate)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertBurnrateRequired(aBurnrate)
	})
}
